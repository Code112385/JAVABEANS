/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Users;

import Objects.User;
import java.awt.Color;
import java.sql.*;
import java.time.*;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Matcher;
import java.util.regex.Pattern;
import javax.swing.JOptionPane;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Admin
 */
public class adminDashB extends javax.swing.JFrame {

    /**
     * Creates new form adminDashB
     */
    Connection conn;
    DefaultTableModel model;

    public adminDashB() {
        initComponents();
        conn = dbsConn.getConn();
        dbsConn.createUserInfoTable();
        model = (DefaultTableModel) table.getModel();
        display();
    }

    private void display() {
        ArrayList<User> data = new ArrayList<>();

        try {
            Statement stmt = conn.createStatement();
            String query = "SELECT * FROM userInfo";
            ResultSet rs = stmt.executeQuery(query);
            ResultSetMetaData rsmd = rs.getMetaData();

            int colCount = rsmd.getColumnCount();
            User info;

            while (rs.next()) {
                info = new User(rs.getInt("UserId"), rs.getString("lName"), rs.getString("fName"), rs.getString("mInitials"),
                        rs.getString("address"), rs.getString("emailAdd"), rs.getString("contactNum"), rs.getDate("HiredDate"), rs.getString("Status"));
                data.add(info);
            }
            Object[] row = new Object[colCount];
            model.setRowCount(0);

            for (User datalist : data) {
                row[0] = datalist.getId();
                row[1] = datalist.getfullName();
                row[2] = datalist.getAdd();
                row[3] = datalist.getEAdd();
                row[4] = datalist.getContactNum();
                row[5] = datalist.getHiredDate();
                row[6] = datalist.getStatus();
                model.addRow(row);
            }

        } catch (SQLException e) {
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        salesReport = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        transacReport = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        account = new javax.swing.JPanel();
        jLabel4 = new javax.swing.JLabel();
        userId = new javax.swing.JTextField();
        lName = new javax.swing.JTextField();
        fName = new javax.swing.JTextField();
        mi = new javax.swing.JTextField();
        addr = new javax.swing.JTextField();
        eAddr = new javax.swing.JTextField();
        cont = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        table = new javax.swing.JTable();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        bButt = new javax.swing.JButton();
        product = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        inventory = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(204, 204, 204));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Logo");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, 60, 60));

        jButton1.setText("Inventory");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 247, 140, 30));

        jButton2.setText("Sales Report");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 133, 140, 30));

        jButton3.setText("Transaction Report");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 160, 140, 30));

        jButton4.setText("Accounts");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 189, 140, 30));

        jButton5.setText("Products");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel1.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 218, 140, 30));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, -3, 140, 570));

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        salesReport.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setText("Sales Reports");
        salesReport.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(36, 20, -1, -1));

        jLayeredPane1.add(salesReport, "card2");

        transacReport.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel3.setText("Transaction Reports");
        transacReport.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(47, 26, -1, -1));

        jLayeredPane1.add(transacReport, "card3");

        account.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel4.setFont(new java.awt.Font("Tahoma", 1, 18)); // NOI18N
        jLabel4.setText("Manage Accounts");
        account.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 20, -1, -1));

        userId.setForeground(new java.awt.Color(102, 102, 102));
        userId.setText("UserID");
        userId.setCaretColor(new java.awt.Color(51, 51, 51));
        userId.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        userId.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                userIdFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                userIdFocusLost(evt);
            }
        });
        account.add(userId, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, 110, -1));

        lName.setForeground(new java.awt.Color(102, 102, 102));
        lName.setText("Last Name");
        lName.setCaretColor(new java.awt.Color(51, 51, 51));
        lName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        lName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                lNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                lNameFocusLost(evt);
            }
        });
        account.add(lName, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, 130, -1));

        fName.setForeground(new java.awt.Color(102, 102, 102));
        fName.setText("First Name");
        fName.setCaretColor(new java.awt.Color(51, 51, 51));
        fName.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        fName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                fNameFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                fNameFocusLost(evt);
            }
        });
        account.add(fName, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, 120, -1));

        mi.setForeground(new java.awt.Color(102, 102, 102));
        mi.setText("M.I");
        mi.setCaretColor(new java.awt.Color(51, 51, 51));
        mi.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        mi.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                miFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                miFocusLost(evt);
            }
        });
        account.add(mi, new org.netbeans.lib.awtextra.AbsoluteConstraints(540, 80, 40, -1));

        addr.setForeground(new java.awt.Color(102, 102, 102));
        addr.setText("Address");
        addr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                addrFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                addrFocusLost(evt);
            }
        });
        account.add(addr, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, 450, -1));

        eAddr.setForeground(new java.awt.Color(102, 102, 102));
        eAddr.setText("Email Address");
        eAddr.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                eAddrFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                eAddrFocusLost(evt);
            }
        });
        account.add(eAddr, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 230, -1));

        cont.setForeground(new java.awt.Color(102, 102, 102));
        cont.setText("Contact #");
        cont.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                contFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                contFocusLost(evt);
            }
        });
        account.add(cont, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 140, 190, -1));

        table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "UserID", "Full Name", "Address", "Email Address", "Contact #", "Hired Date", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        table.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(table);

        account.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 250, 660, 300));

        jButton6.setText("ADD");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        account.add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(340, 210, -1, -1));

        jButton7.setText("UPDATE");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        account.add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 210, -1, -1));

        jButton8.setText("DELETE");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        account.add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(500, 210, -1, -1));

        bButt.setText("BLOCK");
        bButt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bButtActionPerformed(evt);
            }
        });
        account.add(bButt, new org.netbeans.lib.awtextra.AbsoluteConstraints(580, 210, -1, -1));

        jLayeredPane1.add(account, "card4");

        product.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setText("Products");
        product.add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 30, -1, -1));

        jLayeredPane1.add(product, "card5");

        inventory.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setText("Inventory");
        inventory.add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        jLayeredPane1.add(inventory, "card6");

        getContentPane().add(jLayeredPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(140, 0, 680, 570));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        salesReport.setVisible(true);
        transacReport.setVisible(false);
        account.setVisible(false);
        product.setVisible(false);
        inventory.setVisible(false);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        salesReport.setVisible(false);
        transacReport.setVisible(true);
        account.setVisible(false);
        product.setVisible(false);
        inventory.setVisible(false);
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        salesReport.setVisible(false);
        transacReport.setVisible(false);
        account.setVisible(true);
        product.setVisible(false);
        inventory.setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        salesReport.setVisible(false);
        transacReport.setVisible(false);
        account.setVisible(false);
        product.setVisible(true);
        inventory.setVisible(false);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:\
        salesReport.setVisible(false);
        transacReport.setVisible(false);
        account.setVisible(false);
        product.setVisible(false);
        inventory.setVisible(true);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void userIdFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userIdFocusGained
        // TODO add your handling code here:
        if (userId.getText().equals("UserID")) {
            userId.setText(null);
            userId.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_userIdFocusGained

    private void userIdFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_userIdFocusLost
        // TODO add your handling code here:
        if (userId.getText().equals("")) {
            userId.setText("UserID");
            userId.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_userIdFocusLost

    private void lNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lNameFocusGained
        // TODO add your handling code here:
        if (lName.getText().equals("Last Name")) {
            lName.setText(null);
            lName.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_lNameFocusGained

    private void lNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_lNameFocusLost
        // TODO add your handling code here:
        if (lName.getText().equals("")) {
            lName.setText("Last Name");
            lName.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_lNameFocusLost

    private void fNameFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fNameFocusGained
        // TODO add your handling code here:
        if (fName.getText().equals("First Name")) {
            fName.setText(null);
            fName.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_fNameFocusGained

    private void fNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_fNameFocusLost
        // TODO add your handling code here:
        if (fName.getText().equals("")) {
            fName.setText("First Name");
            fName.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_fNameFocusLost

    private void miFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_miFocusGained
        // TODO add your handling code here:
        if (mi.getText().equals("M.I")) {
            mi.setText(null);
            mi.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_miFocusGained

    private void miFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_miFocusLost
        // TODO add your handling code here:
        if (mi.getText().equals("")) {
            mi.setText("M.I");
            mi.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_miFocusLost

    private void addrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addrFocusGained
        // TODO add your handling code here:
        if (addr.getText().equals("Address")) {
            addr.setText(null);
            addr.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_addrFocusGained

    private void addrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_addrFocusLost
        // TODO add your handling code here:
        if (addr.getText().equals("")) {
            addr.setText("Address");
            addr.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_addrFocusLost

    private void eAddrFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eAddrFocusGained
        // TODO add your handling code here:
        if (eAddr.getText().equals("Email Address")) {
            eAddr.setText(null);
            eAddr.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_eAddrFocusGained

    private void eAddrFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_eAddrFocusLost
        // TODO add your handling code here:
        if (eAddr.getText().equals("")) {
            eAddr.setText("Email Address");
            eAddr.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_eAddrFocusLost

    private void contFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contFocusGained
        // TODO add your handling code here:
        if (cont.getText().equals("Contact #")) {
            cont.setText(null);
            cont.setForeground(Color.BLACK);
        }
    }//GEN-LAST:event_contFocusGained

    private void contFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contFocusLost
        // TODO add your handling code here:
        if (cont.getText().equals("")) {
            cont.setText("Contact #");
            cont.setForeground(Color.GRAY);
        }
    }//GEN-LAST:event_contFocusLost

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        // TODO add your handling code here:
        LocalDate currentDate = LocalDate.now();
        Date date = Date.valueOf(currentDate);
        String lname = lName.getText();
        String fname = fName.getText();
        String midI = mi.getText();
        String add = addr.getText();
        String eAdd = eAddr.getText();
        String stats = "Active";
        String fullName = lname + ", " + fname + " " + midI + ".";
        int id;
        // int con;

        if (!validateAllFields()) {
            return;
        }

        try {
            id = Integer.parseInt(userId.getText());
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Invalid Id!! Please enter a number", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        String contactNumber = cont.getText().trim();

        if (!contactNumber.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "Invalid Contact Number!! It must be exactly 11 digits.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        if (!isValidEmail(eAdd)) {
            JOptionPane.showMessageDialog(this, "Invalid Email!! Please enter a valid email address", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            PreparedStatement ps = conn.prepareStatement("INSERT INTO userInfo(userId, lName, fName, mInitials, emailAdd, address, contactNum, HiredDate, Status) "
                    + "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)");

            ps.setInt(1, id);
            ps.setString(2, lname);
            ps.setString(3, fname);
            ps.setString(4, midI);
            ps.setString(5, eAdd);
            ps.setString(6, add);
            ps.setString(7, contactNumber);
            ps.setDate(8, date);
            ps.setString(9, stats);
            ps.executeUpdate();
            model.addRow(new Object[]{id, fullName, add, eAdd, contactNumber, date, stats});

        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(this, "Error inserting data: " + ex.getMessage(), "Database Error", JOptionPane.ERROR_MESSAGE);
        }


    }//GEN-LAST:event_jButton6ActionPerformed

    private void tableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tableMouseClicked
        // TODO add your handling code here:

        int row = table.getSelectedRow();
        int id = (int) model.getValueAt(row, 0);
        String query = "SELECT * FROM userInfo WHERE UserId = '" + id + "'";
        
        if (row != -1) {
            String status = model.getValueAt(row, 6).toString();
            if (status.equalsIgnoreCase("Active")) {
                bButt.setText("BLOCK");
            } else if (status.equalsIgnoreCase("Blocked")) {
                bButt.setText("UNBLOCK");
            }
        }
        try {
            Statement stmt = conn.createStatement();
            ResultSet rs = stmt.executeQuery(query);

            if (rs.next()) {

                String strgId = String.valueOf(rs.getInt("UserId"));
                String lname = rs.getString("lName");
                String fname = rs.getString(3);
                String midI = rs.getString(4);
                String eAdd = rs.getString(5);
                String add = rs.getString(6);
                String con = rs.getString(7);

                // Set data to fields
                userId.setText(strgId);
                lName.setText(lname);
                fName.setText(fname);
                mi.setText(midI);
                eAddr.setText(eAdd);
                addr.setText(add);
                cont.setText(con);

                // Disable selected fields
                userId.setEnabled(false);
                lName.setEnabled(false);
                fName.setEnabled(false);
                mi.setEnabled(false);

                userId.setForeground(Color.BLACK);
                lName.setForeground(Color.BLACK);
                fName.setForeground(Color.BLACK);
                mi.setForeground(Color.BLACK);
                eAddr.setForeground(Color.BLACK);
                addr.setForeground(Color.BLACK);
                cont.setForeground(Color.BLACK);
            }

        } catch (SQLException e) {

        }
    }//GEN-LAST:event_tableMouseClicked

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        // TODO add your handling code here:
        int row = table.getSelectedRow();
        int id = (int) model.getValueAt(row, 0);
        String strID = String.valueOf(id);
        String add = addr.getText();
        String eAdd = eAddr.getText();

        String contactNumber = cont.getText().trim();

        if (!validateAllFields()) {
            return;
        }

        if (!contactNumber.matches("\\d{11}")) {
            JOptionPane.showMessageDialog(this, "Invalid Contact Number!! It must be exactly 11 digits.", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }
        if (!isValidEmail(eAdd)) {
            JOptionPane.showMessageDialog(this, "Invalid Email!! Please enter a valid email address", "Error", JOptionPane.ERROR_MESSAGE);
            return;
        }

        try {
            PreparedStatement ps = conn.prepareStatement("UPDATE userInfo SET emailAdd = ?, address = ?, contactNum = ? WHERE UserId = ?");
            ps.setString(1, eAdd);
            ps.setString(2, add);
            ps.setString(3, contactNumber);
            ps.setInt(4, id);

            ps.executeUpdate();

            model.setValueAt(strID, row, 0);
            model.setValueAt(eAdd, row, 3);
            model.setValueAt(add, row, 2);
            model.setValueAt(contactNumber, row, 2);

            JOptionPane.showMessageDialog(null, "Update Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
        } catch (SQLException ex) {
            Logger.getLogger(adminDashB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        try {
            int row = table.getSelectedRow();
            int id = (int) model.getValueAt(row, 0);
            int message = JOptionPane.showConfirmDialog(null, "Are you sure you want to delete?", "Message", JOptionPane.YES_NO_OPTION);

            if (message == 0) {
                PreparedStatement ps = conn.prepareStatement("DELETE FROM userInfo WHERE UserId = ?");

                ps.setInt(1, id);

                ps.executeUpdate();
                model.removeRow(row);
                JOptionPane.showMessageDialog(null, "Deleted Successfully", "Message", JOptionPane.INFORMATION_MESSAGE);
            }
        } catch (SQLException ex) {
            Logger.getLogger(adminDashB.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jButton8ActionPerformed

    private void bButtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bButtActionPerformed
        // TODO add your handling code here:

        int row = table.getSelectedRow();
        if (row != -1) {
            String status = model.getValueAt(row, 6).toString();
            if (status.equalsIgnoreCase("Active")) {
                bButt.setText("BLOCK");
            } else if (status.equalsIgnoreCase("Blocked")) {
                bButt.setText("UNBLOCK");
            }
        }
        if (row == -1) {
            JOptionPane.showMessageDialog(this, "Please select a user first.", "Warning", JOptionPane.WARNING_MESSAGE);
            return;
        }
        int userId = (int) model.getValueAt(row, 0);
        String currentStatus = model.getValueAt(row, 6).toString();
        String newStatus = currentStatus.equalsIgnoreCase("Active") ? "Blocked" : "Active";

        // Confirmation dialog
        String action = newStatus.equals("Blocked") ? "block" : "unblock";
        int confirm = JOptionPane.showConfirmDialog(this,
                "Are you sure you want to " + action + " this user?",
                "Confirm " + action.toUpperCase(),
                JOptionPane.YES_NO_OPTION);

        if (confirm != JOptionPane.YES_OPTION) {
            return;
        }

        try {
            PreparedStatement ps = conn.prepareStatement("UPDATE userInfo SET `Status` = ? WHERE UserId = ?");
            ps.setString(1, newStatus);
            ps.setInt(2, userId);
            ps.executeUpdate();

            String message = newStatus.equals("Blocked") ? "User has been BLOCKED." : "User has been UNBLOCKED.";
            JOptionPane.showMessageDialog(this, message, "Status Changed", JOptionPane.INFORMATION_MESSAGE);

            display();

            bButt.setText(newStatus.equals("Blocked") ? "UNBLOCK" : "BLOCK");

        } catch (SQLException ex) {
            Logger.getLogger(adminDashB.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_bButtActionPerformed

    private boolean isValidEmail(String email) {
        String emailRegex = "^[A-Za-z0-9+_.-]+@[A-Za-z0-9.-]+\\.com$";
        Pattern pattern = Pattern.compile(emailRegex);
        Matcher matcher = pattern.matcher(email);
        return matcher.matches();
    }

    private boolean validateAllFields() {

        if (isFieldInvalid(userId, "UserID")) {
            showError("Please enter a valid UserID.");
            return false;
        }
        if (isFieldInvalid(lName, "Last Name")) {
            showError("Please enter a valid Last Name.");
            return false;
        }
        if (isFieldInvalid(fName, "First Name")) {
            showError("Please enter a valid First Name.");
            return false;
        }
        if (isFieldInvalid(mi, "M.I")) {
            showError("Please enter valid initials.");
            return false;
        }
        if (isFieldInvalid(addr, "Address")) {
            showError("Please enter a valid Address.");
            return false;
        }
        if (isFieldInvalid(eAddr, "Email Address")) {
            showError("Please enter a valid Email Address.");
            return false;
        }
        if (isFieldInvalid(cont, "Contact #")) {
            showError("Please enter a valid Contact Number.");
            return false;
        }
        return true;
    }

    private boolean isFieldInvalid(JTextField field, String placeholder) {
        String text = field.getText().trim();
        return text.isEmpty() || text.equalsIgnoreCase(placeholder);
    }

    private void showError(String message) {
        JOptionPane.showMessageDialog(this, message, "Validation Error", JOptionPane.ERROR_MESSAGE);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(adminDashB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(adminDashB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(adminDashB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(adminDashB.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new adminDashB().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel account;
    private javax.swing.JTextField addr;
    private javax.swing.JButton bButt;
    private javax.swing.JTextField cont;
    private javax.swing.JTextField eAddr;
    private javax.swing.JTextField fName;
    private javax.swing.JPanel inventory;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField lName;
    private javax.swing.JTextField mi;
    private javax.swing.JPanel product;
    private javax.swing.JPanel salesReport;
    private javax.swing.JTable table;
    private javax.swing.JPanel transacReport;
    private javax.swing.JTextField userId;
    // End of variables declaration//GEN-END:variables
}
